git init => Inicializar una carpeta como repositorio de git
git status => Revisar los archivos modificados
git diff => Revisar cuál fue el cambio del último commit a lo actual
git congif --global -l => Ver Credenciales Registradas a Git
git commit => Confirmación de algo que estuvo en el stage
git checkout . => Volver al cambio anterior al último
git add . => Agregar Todos los cambios hechos

Con git podemos indicar todos los archivos con cierta extensión que vamos a hacer commit, Con Css por ejemplo => git add *.css
Indicamos todos los archivos con extensión css

git reset file => Si realizamos un => git add . => Podemos eliminar ciertos archivos para antes de hacer el commit => git reset index.html

git add . = git add -A = git add --all

git config --global alias.lg "log" => Cambiamos la forma de escribir el comando git log por git lg

git commit --amend -m "Message" => Permite modificar el mensaje del último commit realizado

git mv nombreArchivo.html nuevoNombre.html => Permite modificar el nombre de los archivos si tener que cambiar desde el Explorador

git rm nombreArchivo.html => En git podemos eliminar archivos con rm y especificamos el nombre del archivo

git reset --soft idDelCommit => Está opción nos permite saltar a el commit de la id que especificamos

git reset --hard idDelCommit => Aquí volvemos al commit especificado y recuperamos los archivos que eliminamos

git reset --mixed idDelCommit => Va a ir a un punto de la historia evitando los commits que hicimos, los cambios se mantienen.

git reflog => Vemos los movimientos y todos los commits aunque regremos


Un .gitignore nos permite decir a Git que archivos estar llevando el control y sobre cuales no

En git las branch nos funcionan para escribir código fuera de la rama principal por si hacemos un cambio y no estamos segureos de él
Para crear una Rama => git branch nombreDeLaRama

Cuando la creamos no estamos sobre esa rama, para cambiarnos a ella hacemos
git checkout nombreDeLaRama

Si el nuevo cambio estamos seguros de implementarlo a la rama principal debemos unirlo y eso es posible con:
git merge nombreDeLaRama
Nota: Es importante cambiar a la rama donde vamos a unir esos cambios

Para eliminar una rama es => git branch -d nombreDeLaRama

Podemos cambiar y hacer una nueva rama com => git checkout -b nombreDeLaRama

Etiquetas: Para nombrar a los commits que suelen ser algo así Aigf2532k para cambiarlo así v. 1.0

git tag nombreEtiqueta => Crea una Etiqueta, Cuando hacemos esto se hace para el último commit hecho

git tag -d nombreEtiqueta => Para borrar una etiqueta

git tag nombreEtiqueta -m "Mensaje" => También podemos darle un mensaje a nuestras Etiquetas

Para mostrar la versión, y también que cambios se han hecho desde esa versión se hace un:

git show nombreEtiqueta

git fetch => Trae cambios hechos al repositorio que no están en nuestra máquina, después debemos hacer un merge

git pull => Igual que fetch pero no hay necesidad de un merge

